syntax = "proto3";

package protos;


// 1 导入 gateway 相关的proto 以及 swagger 相关的 proto
import "googleapis/google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

// 2 定义 swagger 相关的内容
option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
		title: "grpc gateway sample";
		version: "1.0";	
		license: {
			name: "MIT";			
		};
  };
  schemes: HTTP;
};

service TmpLoser {
  rpc QuizCorrect(QuizCorrectRequest) returns (QuizCorrectResponse) {
    option (google.api.http) = {
        post: "/api/doc/tl/quiz/correct"
        body: "*"
    };
  }
  rpc QuizNew(QuizNewRequest) returns (QuizNewResponse) {
    option (google.api.http) = {
        get: "/api/doc/tl/quiz/new"
    };
  }
}
 
message QuizNewRequest {
  string user_name = 1;
  string type = 2;
}

message QuizNewResponse {
  uint64 state = 1;
  string detail = 2;
  NewQuizData data = 3;
}

message QuizCorrectRequest {
    uint64 question_id = 1;
    string description = 2;
    string choose = 3;
    map<string, string> options = 4;
    uint64 quiz_id = 5;
    uint64 order = 6;
    uint64 correct = 7;
    uint64 spend = 8;
    uint64 type = 9;
}

message QuizCorrectResponse {
  uint64 state = 1;
  string detail = 2;
  Data data = 3;
}

message Data {
  uint64 history_id = 3;
  string user_name = 4;
  uint64 question_id = 5;
  string choose = 6;
  uint64 quiz_id = 7;
  uint64 order = 8;
  uint64 correct = 9;
  uint64 spend = 10;
  string created_at = 11;
}

message NewQuizData {
  repeated uint64 question_id = 1;
}